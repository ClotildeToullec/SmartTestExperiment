"
See comment for TimeAndMemoryExperiment for an overview of the whole process.

TimeAndMemoryMaster, selects randomly a change in the list of all possible changes (given by the ombufiles of all the 'datasets'), then launches a child image for the given dataset of the chosen change which runs TimeAndMemoryPreparer to finish preparing this image for the experiment, then launches repeatedly this image running TimeAndMemorySlave
"
Class {
	#name : #TimeAndMemoryMaster,
	#superclass : #TimeAndMemoryExperiment,
	#instVars : [
		'datasetSizes',
		'posInDataset',
		'dataSets'
	],
	#classInstVars : [
		'runningExperiment'
	],
	#category : #'SmartTestExperiment-timeAndMem'
}

{ #category : #running }
TimeAndMemoryMaster class >> runExperiment [
	"Main entry point for master image
	 run:

		TimeAndMemoryMaster runExperiment.
	"
	<script>
	self runExperiment: false
]

{ #category : #running }
TimeAndMemoryMaster class >> runExperiment: resetCSV [
	"Main entry point for master image
	 run:

		TimeAndMemoryExperiment runExperiment: false.
	"
	self flag: 'Generated by Eleonore: Here we should have one method that iterate on a list of static analysis'.
	self
		includeStaticAnalysis: true;
		includeDynamicAnalysis: true.
	runningExperiment := self new.
	"runningExperiment addDataSet: ApplicationDataSet ForwardChainer."
	runningExperiment addDataSet: ApplicationDataSet LANSimulation.
"	runningExperiment addDataSet: ApplicationDataSet MooseQuery.
	runningExperiment addDataSet: ApplicationDataSet Pheme.
	runningExperiment addDataSet: ApplicationDataSet Pillar.
	runningExperiment addDataSet: ApplicationDataSet PostgreSQL."
	runningExperiment eraseCSV: resetCSV.
	runningExperiment run

	
]

{ #category : #accessing }
TimeAndMemoryMaster >> addDataSet: aDataSet [
	dataSets add: aDataSet.
	datasetSizes add: (aDataSet name -> aDataSet entriesCount)
]

{ #category : #'child image' }
TimeAndMemoryMaster >> createChildImageForExperiment: changePos [
	"launches a child image from the currentDataset base image and prepare for experiment"

	ImageRunner platformRunner
		runImage: dataSet imageReference withParameters: { #doPrepare . dataSet name . changePos asString }.
	
	self waitForSignal: self prepareSignal.
]

{ #category : #accessing }
TimeAndMemoryMaster >> datasetFromName: dsName [
	^ dataSets detect: [ :ds | ds name = dsName ]
]

{ #category : #accessing }
TimeAndMemoryMaster >> findDatasetAndPos: globalPos [
	| dsPos |
	dsPos := globalPos.
	datasetSizes do: [ :assoc |"assoc <==>  dataset-name -> dataset-size"
		(assoc value >= dsPos)
			ifTrue: [^ (assoc key) -> dsPos ]
			ifFalse: [ dsPos := dsPos - assoc value ]
	]
]

{ #category : #running }
TimeAndMemoryMaster >> getRandomActionnableChange: totalEntries [
	| datasetWithPos |

	[
		datasetWithPos := self findDatasetAndPos: totalEntries atRandom.
		dataSet := self datasetFromName: datasetWithPos key.
		self
			smarttestInterventionNeeded: (dataSet changeAtPos: datasetWithPos value)
	]
		whileFalse.
	^ datasetWithPos value
]

{ #category : #initialization }
TimeAndMemoryMaster >> initialize [
	super initialize.
	dataSets := OrderedCollection new.
	datasetSizes := OrderedCollection new.
]

{ #category : #running }
TimeAndMemoryMaster >> prepareAndRunExperimentForChange: changePos [
	self createChildImageForExperiment: changePos.

	"run 10 times to compute average values"
	1 to: 10 do: [ :i |
		self runChildImageForExperiment: i.
	]
]

{ #category : #running }
TimeAndMemoryMaster >> run [
	"called by
		TimeAndMemoryMaster class>>runExperiment"

	| totalEntries |
	totalEntries := self totalEntriesInDatasets.
	5 timesRepeat: [
		self prepareAndRunExperimentForChange: (self getRandomActionnableChange: totalEntries)
	]
]

{ #category : #'child image' }
TimeAndMemoryMaster >> runChildImageForExperiment: expNumber [
	ImageRunner platformRunner
		runImage: self runningImageName asFileReference
		withParameters: {#doRun . expNumber asString}.

	self waitForSignal: (self runningExpSignal: expNumber).
]

{ #category : #accessing }
TimeAndMemoryMaster >> totalEntriesInDatasets [
	^ (datasetSizes collect: #value) sum
]
